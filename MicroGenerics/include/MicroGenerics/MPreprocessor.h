#pragma once


#define MSTR(STR) (L##STR)

/*
*    M_OBJECT_ACHIEVE_2  使用了VS特有关键字 __super 移植到其他编译器的时候可以直接去除这行代码
*/

namespace {
#define M_OBJECT_POOL_ACHIEVE(OBJ)        __M_OBJECT_POOL_ACHIEVE(OBJ)

#define M_FUNCTION_ACHIEVE(FUNCNAME)      __M_FUNCTION_ACHIEVE(FUNCNAME)

#define M_OBJECT                          __M_OBJECT_DEFINE
#define M_OBJECT_ACHIEVE(OBJ, ...)        __M_OBJECT_ACHIEVE(OBJ, MPP_EXPAND_VA_ARGS(__VA_ARGS__), END, END, END, END, END)

#define M_OBJECT_ACHIEVE_0(OBJ)           __M_OBJECT_ACHIEVE_0(OBJ)
#define M_OBJECT_ACHIEVE_EXTEND           __MPP_OBJECT_FUNCTION_CALL_SPREAD_A64
#define M_OBJECT_ACHIEVE_1(OBJ)           __M_OBJECT_ACHIEVE_1(OBJ)
#define M_OBJECT_ACHIEVE_2(OBJ)           __M_OBJECT_ACHIEVE_2(OBJ)

#define MPP_THREAD_SAFE(NAME)             __MPP_THREAD_SAFE(NAME)
#define MPP_THREAD_SAFE_LOCK(NAME)        __MPP_THREAD_SAFE_LOCK(NAME)
#define MPP_THREAD_SAFE_UNLOCK(NAME)      __MPP_THREAD_SAFE_UNLOCK(NAME)
#define MPP_THREAD_SAFE_TEMP_LOCK(NAME)   __MPP_THREAD_SAFE_TEMP_LOCK(NAME)
}


namespace {
    /*
    * 使用预定义宏生成一个Get模板，Get的数据类型最好为基本类型
    * 参数一：Get模板的名字
    * 参数二：Get函数的名字
    * 参数三：Get数据的类型
    * 参数四：Get数据的默认值
    */
#define MFX_TEMPLATE_EASY_GET __MFX_TEMPLATE_EASY_GET

    /*
    * 使用预定义宏生成一个Set模板，Set的数据类型最好为基本类型
    * 参数一：Set模板的名字
    * 参数二：Set函数的名字
    * 参数三：Set数据的类型
    * 参数四：Set数据的默认值
    */
#define MFX_TEMPLATE_EASY_SET __MFX_TEMPLATE_EASY_SET

    /*
    * 使用预定义宏生成一个Is模板，Is返回一个bool值
    * 参数一：Set模板的名字
    * 参数二：Set函数的名字
    * 参数三：默认bool数据的值
    */
#define MFX_TEMPLATE_EASY_IS __MFX_TEMPLATE_EASY_IS
}

namespace {
/****************************************************************************************************************/
#define __MFX_TEMPLATE_EASY_GET(ENAME, EFUNC, ETYPE, EINIT) \
	template<typename T>\
	ETYPE ENAME(T& rhs, ETYPE ret = EINIT)\
	{\
		if constexpr (std::is_pointer_v<T>)\
		{\
			rhs->EFUNC(&ret);\
		}\
		else\
		{\
			rhs.EFUNC(&ret);\
		}\
		return ret;\
	}

#define __MFX_TEMPLATE_EASY_SET(ENAME, EFUNC, ETYPE, EINIT) \
	template<typename T>\
	ETYPE ENAME(T& rhs, ETYPE set = EINIT)\
	{\
		if constexpr (std::is_pointer_v<T>)\
		{\
			rhs->EFUNC(set);\
		}\
		else\
		{\
			rhs.EFUNC(set);\
		}\
		return set;\
	}

#define __MFX_TEMPLATE_EASY_IS(ENAME, EFUNC, EINIT) \
    template<typename T>\
    bool ENAME(T& rhs, bool init = EINIT)\
    {\
        if constexpr (std::is_pointer_v<T>)\
        {\
            rhs->EFUNC(&init);\
        }\
        else\
        {\
            rhs.EFUNC(&init);\
        }\
        return init;\
    }
/****************************************************************************************************************/

#define __M_OBJECT_POOL_ACHIEVE(OBJ) \
__MPP_THREAD_SAFE(OBJ)\
auto getStack##OBJ()\
{\
	static std::stack<OBJ*> m_Stack;\
	return &m_Stack;\
}\
OBJ* new##OBJ()\
{\
	auto m_Stack = getStack##OBJ();\
    MPP_THREAD_SAFE_TEMP_LOCK(OBJ);\
	if (m_Stack->empty())\
	{\
		return new OBJ;\
	}\
	else\
	{\
		auto p_ret = m_Stack->top();\
		m_Stack->pop();\
		return p_ret;\
	}\
}\
MicroFlakeX::MResult del##OBJ(OBJ* del)\
{\
    auto m_Stack = getStack##OBJ();\
    MPP_THREAD_SAFE_TEMP_LOCK(OBJ);\
	m_Stack->push(del);\
	return MicroFlakeX::MResult::Success;\
}

#define __MPP_THREAD_SAFE(NAME)\
auto getThreadLock##NAME()\
{\
	static std::mutex m_Mutex;\
	return &m_Mutex;\
}

#define __MPP_THREAD_SAFE_LOCK(NAME)\
    m_Mutex.lock()

#define __MPP_THREAD_SAFE_UNLOCK(NAME)\
    m_Mutex.unlock()

#define __MPP_THREAD_SAFE_TEMP_LOCK(NAME)\
    std::unique_lock<std::mutex> mt_Lock(*getThreadLock##NAME());

}


namespace {
/****************************************************************************************************************/
#define __M_FUNCTION_ACHIEVE(FUNCNAME) \
class FUNCNAME##MFunctionWorker \
    : public MicroFlakeX::MFunctionWorker \
{ \
    public: \
	    FUNCNAME##MFunctionWorker() : MFunctionWorker(MSTR(#FUNCNAME)){}; \
	    MicroFlakeX::MResult ReflectionCall(MTempParam tempParam)\
	    {\
		    return MicroFlakeX::_MFunctionCall(tempParam,FUNCNAME);\
	    }\
};\
FUNCNAME##MFunctionWorker FUNCNAME##Hand;


/****************************************************************************************************************/
#define __M_OBJECT_DEFINE\
	public:\
	MicroFlakeX::MResult GetObjectName(const wchar_t** ret);\
	MicroFlakeX::MResult FunctionCall(MicroFlakeX::MStringHash recv, MicroFlakeX::MTempParam citeParam = MicroFlakeX::MTempParam());


/****************************************************************************************************************/
#define __M_OBJECT_ACHIEVE(OBJ, ...) \
	M_OBJECT_ACHIEVE_0(OBJ)\
	MPP_EXPAND_VA_ARGS(M_OBJECT_ACHIEVE_EXTEND(OBJ, __VA_ARGS__));\
	M_OBJECT_ACHIEVE_1(OBJ)\
	M_OBJECT_ACHIEVE_2(OBJ)\


/****************************************************************************************************************/
}

namespace {
/****************************************************************************************************************/
#define __M_OBJECT_ACHIEVE_0(OBJ) \
MicroFlakeX::MResult OBJ::FunctionCall(MicroFlakeX::MStringHash recvFunc, MicroFlakeX::MTempParam citeParam)\
{\
	switch (recvFunc.m_Hash)\
	{

/****************************************************************************************************************/
#define __MPP_OBJECT_FUNCTION_CALL_CODE(OBJ, AUTO_FUNC)\
		case MicroFlakeX::MStringHash::MStringToHash(MSTR(#AUTO_FUNC)):\
		{\
			return MicroFlakeX::_MObjectFunctionCall(this, citeParam, &OBJ::AUTO_FUNC);\
		}\
		case MicroFlakeX::MStringHash::MStringToHash(MSTR("IsHave_"#AUTO_FUNC)):\
		{\
			return MicroFlakeX::MResult::Success;\
		}

/****************************************************************************************************************/
#ifdef _MSC_VER
#define __M_OBJECT_ACHIEVE_1(OBJ) \
		case MicroFlakeX::MStringHash::MStringToHash(MSTR("FunctionCall")):\
		{\
			return MicroFlakeX::_MObjectFunctionCall(this, citeParam, &OBJ::FunctionCall);\
		}\
		default:\
		{\
			return __super::FunctionCall(recvFunc, citeParam); \
		}\
	}\
}\
MicroFlakeX::MResult OBJ::GetObjectName(const wchar_t** ret)\
{ \
    *ret = MSTR(#OBJ);\
	return MicroFlakeX::MResult::Success;\
};\
OBJ##MObjectWorker OBJ##Hand;\
class OBJ##MObjectWorker\
    : public MicroFlakeX::MObjectWorker\
{\
public:\
	MicroFlakeX::MResult Creat(MicroFlakeX::MObject*& ret)\
	{\
		ret = new OBJ;\
		return MicroFlakeX::MResult::Success;\
	}\
    OBJ##MObjectWorker()\
    : MObjectWorker(MSTR(#OBJ))\
    {


#else
#define __M_OBJECT_ACHIEVE_1(OBJ) \
		case MicroFlakeX::MStringHash::MStringToHash(MSTR("FunctionCall")):\
		{\
			return MicroFlakeX::_MObjectFunctionCall(this, citeParam, &OBJ::FunctionCall);\
		}\
		default:\
		{\
			return MicroFlakeX::MResult::NotFind; \
		}\
	}\
}\
MicroFlakeX::MResult OBJ::GetObjectName(const wchar_t** ret)\
{ \
    *ret = MSTR(#OBJ);\
	return MicroFlakeX::MResult::Success;\
};\
OBJ##MObjectWorker OBJ##Hand;\
class OBJ##MObjectWorker\
    : public MicroFlakeX::MObjectWorker\
{\
public:\
	MicroFlakeX::MResult Creat(MicroFlakeX::MObject*& ret)\
	{\
		ret = new OBJ;\
		return MicroFlakeX::MResult::Success;\
	}\
    OBJ##MObjectWorker()\
    : MObjectWorker(MSTR(#OBJ))\
    {
#endif


/****************************************************************************************************************/
#define __M_OBJECT_ACHIEVE_2()\
    }\
};
/****************************************************************************************************************/
}

namespace {
#define MPP_CONNECT(A, B) A##B
#define MPP_CCONNECT(A, B) MPP_CONNECT(A, B)
#define MPP_CCCONNECT(A, B) MPP_CCONNECT(A, B)
#define MPP_CCCCONNECT(A, B) MPP_CCCONNECT(A, B)
#define MPP_CCCCCONNECT(A, B) MPP_CCCCONNECT(A, B)

#define MPP_EXPAND_VA_ARGS(...) __VA_ARGS__

#define __MPP_GET_ARGS_8(N1, N2, N3, N4, N5, N6, N7, N8, N9, ...) N9

#define MPP_GET_ARGS_NUM_8(...) MPP_EXPAND_VA_ARGS(__MPP_GET_ARGS_8(__VA_ARGS__, 8, 7, 6, 5, 4, 3, 2, 1))
#define MPP_CHECK_ARGS_NUM_8_AB(...) MPP_EXPAND_VA_ARGS(__MPP_GET_ARGS_8(__VA_ARGS__, B, B, B, B, B, B, B, A))

#define __MPP_IS_END_VALUE_ 0,0
#define __MPP_IS_END_VALUE_END 0,0
#define __MPP_IS_END_TO_NUM(...) MPP_EXPAND_VA_ARGS(MPP_GET_ARGS_NUM_8(__MPP_IS_END_VALUE_##__VA_ARGS__))
#define __MPP_IS_END_TO_AB(...) MPP_EXPAND_VA_ARGS(MPP_CHECK_ARGS_NUM_8_AB(__MPP_IS_END_VALUE_##__VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_CHECK_1(OBJ, FUNC_1) __MPP_OBJECT_FUNCTION_CALL_CODE(OBJ, FUNC_1)
#define __MPP_OBJECT_FUNCTION_CALL_CHECK_2(...)
#define __MPP_OBJECT_FUNCTION_CALL_CHECK_3(...)

#define __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1) \
	MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_CHECK_, __MPP_IS_END_TO_NUM(FUNC_1))(OBJ, FUNC_1)
}
/****************************************************************************************************************/
/****************************************************************************************************************/
/****************************************************************************************************************/
namespace {
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B1(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A1(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B2(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A2(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))1(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B3(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A3(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))2(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B4(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A4(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))3(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B5(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A5(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))4(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B6(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A6(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))5(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B7(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A7(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))6(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B8(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A8(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))7(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B9(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A9(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))8(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B10(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A10(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))9(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B11(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A11(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))10(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B12(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A12(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))11(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B13(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A13(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))12(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B14(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A14(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))13(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B15(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A15(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))14(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B16(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A16(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))15(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B17(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A17(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))16(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B18(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A18(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))17(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B19(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A19(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))18(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B20(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A20(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))19(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B21(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A21(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))20(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B22(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A22(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))21(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B23(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A23(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))22(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B24(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A24(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))23(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B25(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A25(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))24(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B26(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A26(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))25(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B27(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A27(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))26(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B28(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A28(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))27(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B29(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A29(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))28(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B30(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A30(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))29(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B31(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A31(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))30(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B32(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A32(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))31(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B33(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A33(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))32(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B34(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A34(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))33(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B35(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A35(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))34(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B36(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A36(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))35(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B37(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A37(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))36(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B38(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A38(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))37(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B39(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A39(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))38(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B40(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A40(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))39(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B41(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A41(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))40(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B42(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A42(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))41(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B43(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A43(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))42(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B44(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A44(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))43(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B45(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A45(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))44(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B46(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A46(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))45(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B47(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A47(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))46(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B48(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A48(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))47(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B49(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A49(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))48(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B50(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A50(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))49(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B51(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A51(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))50(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B52(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A52(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))51(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B53(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A53(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))52(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B54(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A54(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))53(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B55(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A55(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))54(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B56(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A56(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))55(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B57(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A57(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))56(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B58(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A58(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))57(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B59(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A59(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))58(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B60(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A60(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))59(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B61(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A61(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))60(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B62(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A62(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))61(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B63(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A63(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))62(OBJ, __VA_ARGS__))

#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_B64(...)
#define __MPP_OBJECT_FUNCTION_CALL_SPREAD_A64(OBJ, FUNC_1, FUNC_2, FUNC_3, FUNC_4,...)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_1)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_2)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_3)\
    __MPP_OBJECT_FUNCTION_CALL_ACHIEVE(OBJ, FUNC_4)\
    MPP_EXPAND_VA_ARGS(MPP_CCONNECT(__MPP_OBJECT_FUNCTION_CALL_SPREAD_ ,__MPP_IS_END_TO_AB(FUNC_4))63(OBJ, __VA_ARGS__))
}